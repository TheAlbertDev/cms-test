---
import { getEntry } from "astro:content";
import { Image } from "astro:assets";
import type { ImageMetadata } from 'astro';
import { getLangFromUrl, useTranslatedPath } from "../i18n/utils";
import type { CollectionEntry } from "astro:content";
import GradientTag from "./GradientTag.astro";

const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);

const { post } = (Astro.props as { post: CollectionEntry<"posts"> })!;
const category = await getEntry(post.data.category);
const authors = await Promise.all(
  post.data.authors.map(
    async (authorEntry) => await getEntry(authorEntry.author),
  ),
);

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/imgs/*.{jpeg,jpg,png,gif}')
if (!images[post.data.image!]) throw new Error(`"${post.data.image}" does not exist in glob: "src/assets/imgs/*.{jpeg,jpg,png,gif}"`);
if (!images[authors[0].data.image!]) throw new Error(`"${authors[0].data.image!}" does not exist in glob: "src/assets/imgs/*.{jpeg,jpg,png,gif}"`);
---

<article
  class="card grid grid-auto-rows min-content m-0 p-0 items-start group content-start h-min"
>
  <div
    class="aspect-[800/425] mb-4 overflow-hidden rounded-lg flex justify-center items-center"
  >
    <Image
      src={images[post.data.image!]()}
      alt={post.data.title}
      width="720"
      class="w-full h-full object-cover border-transparent transform transition-transform duration-300 ease-in-out group-hover:scale-110"
    />
  </div>
  <div class="text-sm">
    <GradientTag> {category.data.name}</GradientTag>
  </div>
  <h3 class="text-4xl font-bold">
    <a
      class="title group-hover:underline"
      href={`${translatePath(`/posts`)}/${post.slug.split("/")[1]}`}
      >{post.data.title}</a
    >
  </h3>
  <p class="text-base-content text-opacity-65 my-4">{post.data.description}</p>
  <footer class="text-sm flex justify-start items-center">
    {
      authors.map(async (author) => (
        <>
          <span class="avatar mr-4">
            <div class="w-10 rounded-full">
              <Image src={images[authors[0].data.image!]()} alt={author.data.name} width="40" />
            </div>
          </span>
          <span>{author.data.name}</span>
        </>
      ))
    }
    <span class="text-base-content text-opacity-65 mx-2 font-mono">Â·</span>
    <span class="text-base-content text-opacity-65 font-mono"
      >{
        Intl.DateTimeFormat(lang, {
          month: "long",
          day: "numeric",
          year: "numeric",
        }).format(post.data.pubDate)
      }</span
    >
  </footer>
</article>
<style>
  article.card {
    position: relative; /* 1 */
  }

  a.title::before {
    content: "";
    position: absolute; /* 2 */
    inset: 0; /* 2 */
    z-index: 1; /* 3 */
  }
</style>
