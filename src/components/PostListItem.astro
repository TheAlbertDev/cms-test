---
import { getEntry } from "astro:content";
import { getLangFromUrl, useTranslatedPath } from "../i18n/utils";
import type { CollectionEntry } from "astro:content";
import GradientTag from "./GradientTag.astro";

const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);

const { post } = (Astro.props as { post: CollectionEntry<"posts"> })!;
const category = await getEntry(post.data.category);
const authors = await Promise.all(
  post.data.authors.map((authorEntry) => getEntry(authorEntry.author)),
);
---

<li>
  <article
    class="item grid min-[400px]:grid-cols-[auto_1fr] grid-cols-1 min-content items-start content-start h-min gap-6 group"
  >
    <div
      class="min-[400px]:aspect-[1/1] max-h-32 rounded-lg overflow-hidden flex justify-center items-center"
    >
      <img
        src="https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp"
        alt={post.data.title}
        class="w-full h-full object-cover border-transparent transform transition-transform duration-300 ease-in-out group-hover:scale-110"
      />
    </div>
    <div>
      <div class="text-sm">
        <GradientTag> {category.data.name}</GradientTag>
      </div>
      <h3 class="text-xl font-bold">
        <a
          class="title group-hover:underline"
          href={translatePath(`/posts/${post.slug.split("/")[1]}`)}
          >{post.data.title}</a
        >
      </h3>
      <p class="text-base-content text-opacity-65 my-4">
        {post.data.description}
      </p>
      <footer class="text-sm flex justify-start items-center">
        {
          authors.map(async (author) => (
            <>
              <span class="avatar mr-4">
                <div class="w-10 rounded-full">
                  <img src={author.data.image} />
                </div>
              </span>
              <span>{author.data.name}</span>
            </>
          ))
        }
        <span class="text-base-content text-opacity-65 mx-2">Â·</span>
        <span class="text-base-content text-opacity-65"
          >{
            Intl.DateTimeFormat(lang, {
              month: "long",
              day: "numeric",
              year: "numeric",
            }).format(post.data.pubDate)
          }</span
        >
      </footer>
    </div>
  </article>
</li>

<style>
  article.item {
    position: relative; /* 1 */
  }

  a.title::before {
    content: "";
    position: absolute; /* 2 */
    inset: 0; /* 2 */
    z-index: 1; /* 3 */
  }
</style>
